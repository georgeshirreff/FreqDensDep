aes(x = Inf, y = 3, label = param_label), parse = T, hjust = 1.0, vjust = 1) +
scale_colour_manual(drop = F, values = slope_model_colours) +
scale_fill_manual(values = slope_model_colours) +
scale_linetype_manual(values = c(Diurnal = "solid", `Non-diurnal` = "dashed")) +
# geom_crossbar(aes(x = mean_Nthat, xmin = low_Nthat, xmax = high_Nthat, y = mean_break_rate, colour = "break"), size=1) +
facet_nested_wrap(.~newID + Period
# , scales = "free_x"
,  nrow = 2) +
# guides(colour = F) +
scale_y_log10() +
scale_x_continuous(breaks = c(0, 25, 50, 75, 100), labels = c(0, 25, "", 75, ""), minor_breaks = NULL) +
theme_bw() +
labs(y = "Contact rate", x = "Persons present", colour = "Model", linetype = "")
plot_N_chosenModels_Slope_thisthat
toPlot_N_chosenModels_Slope %>%
filter(this_status == this_stat, that_status == that_stat) %>%
pull(Nthat) %>% max(na.rm = T)
toPlot_N_chosenModels_Slope %>%
filter(this_status == this_stat, that_status == that_stat) %>%
filter(Nthat == 100)
toPlot_N_chosenModels_Slope %>%
filter(this_status == this_stat, that_status == that_stat) %>%
filter(Nthat == 100) %>% View
ward_intervals_loglik %>%
filter(this_status == this_stat, that_status == that_stat) %>%
pull(Nthat) %>% max
this_stat = "PA"
ward_intervals_loglik %>%
filter(this_status == this_stat, that_status == that_stat) %>%
pull(Nthat) %>% max
plot_N_chosenModels_Slope_thisthat <- toPlot_N_chosenModels_Slope %>%
filter(this_status == this_stat, that_status == that_stat) %>%
ggplot(aes(x = Nthat)) +
geom_ribbon(aes(ymin = rate_chosenmodel_explo, ymax = rate_chosenmodel_exphi, fill = model_label), alpha = 0.3, show.legend = F) +
geom_line(aes(x = Nthat, y = rate_chosenmodel, colour = model_label, linetype = isDiurnal), linewidth = 0.5) +
# geom_point(aes(x = mean_Nthat, y = obs_intensity, colour = ".data"), alpha = 1) +
# geom_errorbar(aes(x = mean_Nthat, ymin = obs_intensity - sqrt(var_intensity), ymax = obs_intensity + sqrt(var_intensity), colour = ".data"), alpha = 1) +
# geom_line(aes(y = rate_chosenmodel, colour = model_label), linewidth = 1.0, show.legend = T) +
# geom_line(aes(y = rate_chosenmodel, colour = model_label, linetype = diurnality), linewidth = 1.0, show.legend = T) +
geom_point(data = ward_intervals_loglik %>%
filter(this_status == this_stat, that_status == that_stat),
aes(y = contactIntensity, colour = factor(".data", levels = names(slope_model_colours))), alpha = 0.3, size = 0.3) +
geom_text(data = toPlot_N_chosenModels_Slope %>%
filter(this_status == this_stat, that_status == that_stat) %>%
select(newID, Period, param_label) %>% unique,
aes(x = Inf, y = 3, label = param_label), parse = T, hjust = 1.0, vjust = 1) +
scale_colour_manual(drop = F, values = slope_model_colours) +
scale_fill_manual(values = slope_model_colours) +
scale_linetype_manual(values = c(Diurnal = "solid", `Non-diurnal` = "dashed")) +
# geom_crossbar(aes(x = mean_Nthat, xmin = low_Nthat, xmax = high_Nthat, y = mean_break_rate, colour = "break"), size=1) +
facet_nested_wrap(.~newID + Period
# , scales = "free_x"
,  nrow = 2) +
# guides(colour = F) +
scale_y_log10() +
scale_x_continuous(limits = c(0, 50), breaks = c(0, 25, 50), labels = c(0, 25, 50), minor_breaks = NULL) +
theme_bw() +
labs(y = "Contact rate", x = "Persons present", colour = "Model", linetype = "")
plot_N_chosenModels_Slope_thisthat
for(this_stat in c("PA", "PE")){
for(that_stat in c("PA")){
plot_N_chosenModels_Slope_thisthat <- toPlot_N_chosenModels_Slope %>%
filter(this_status == this_stat, that_status == that_stat) %>%
ggplot(aes(x = Nthat)) +
geom_ribbon(aes(ymin = rate_chosenmodel_explo, ymax = rate_chosenmodel_exphi, fill = model_label), alpha = 0.3, show.legend = F) +
geom_line(aes(x = Nthat, y = rate_chosenmodel, colour = model_label, linetype = isDiurnal), linewidth = 0.5) +
# geom_point(aes(x = mean_Nthat, y = obs_intensity, colour = ".data"), alpha = 1) +
# geom_errorbar(aes(x = mean_Nthat, ymin = obs_intensity - sqrt(var_intensity), ymax = obs_intensity + sqrt(var_intensity), colour = ".data"), alpha = 1) +
# geom_line(aes(y = rate_chosenmodel, colour = model_label), linewidth = 1.0, show.legend = T) +
# geom_line(aes(y = rate_chosenmodel, colour = model_label, linetype = diurnality), linewidth = 1.0, show.legend = T) +
geom_point(data = ward_intervals_loglik %>%
filter(this_status == this_stat, that_status == that_stat),
aes(y = contactIntensity, colour = factor(".data", levels = names(slope_model_colours))), alpha = 0.3, size = 0.3) +
geom_text(data = toPlot_N_chosenModels_Slope %>%
filter(this_status == this_stat, that_status == that_stat) %>%
select(newID, Period, param_label) %>% unique,
aes(x = Inf, y = 3, label = param_label), parse = T, hjust = 1.0, vjust = 1) +
scale_colour_manual(drop = F, values = slope_model_colours) +
scale_fill_manual(values = slope_model_colours) +
scale_linetype_manual(values = c(Diurnal = "solid", `Non-diurnal` = "dashed")) +
# geom_crossbar(aes(x = mean_Nthat, xmin = low_Nthat, xmax = high_Nthat, y = mean_break_rate, colour = "break"), size=1) +
facet_nested_wrap(.~newID + Period
# , scales = "free_x"
,  nrow = 2) +
# guides(colour = F) +
scale_y_log10() +
scale_x_continuous(limits = c(0, 50), breaks = c(0, 25, 50), labels = c(0, 25, 50), minor_breaks = NULL) +
theme_bw() +
labs(y = "Contact rate", x = "Persons present", colour = "Model", linetype = "")
#
# plot_N_chosenModels_Slope_thisthat <- toPlot_N_chosenModels_Slope %>%
#   filter(this_status == this_stat, that_status == that_stat) %>%
#   ggplot(aes(x = Nthat)) +
#   # geom_point(aes(x = mean_Nthat, y = obs_intensity, colour = ".data"), alpha = 1) +
#   # geom_errorbar(aes(x = mean_Nthat, ymin = obs_intensity - sqrt(var_intensity), ymax = obs_intensity + sqrt(var_intensity), colour = ".data"), alpha = 1) +
#   geom_line(aes(y = rate_chosenmodel, colour = model_label), linewidth = 1.0, show.legend = T) +
#   geom_point(aes(y = contactIntensity, colour = factor(".data", levels = names(slope_model_colours))), alpha = 0.3, size = 0.3) +
#   geom_text(aes(x = Inf, y = 3, label = param_label), parse = T, hjust = 1.0, vjust = 1) +
#   scale_colour_manual(drop = F, values = slope_model_colours) +
#   facet_nested_wrap(.~newID + Period
#                     , scales = "free_x"
#                     ,  nrow = 2) +
#   # guides(colour = F) +
#   scale_y_log10() +
#   theme_bw() +
#   labs(y = "Contact rate", x = "Persons present", colour = "Model")
ggsave(plot_N_chosenModels_Slope_thisthat, filename = paste0("output/SuppFig12 - rates_over_N_chosenModels_intensity_", this_stat, that_stat, ".png")
, width = 35, height = 20, units = "cm", dpi = 1000)
}
}
library(readxl)
library(magrittr)
library(tidyverse)
library(ggplot2)
library(lubridate)
library(data.table)
library(forcats)
library(gridExtra)
library(stringr)
Sys.setlocale("LC_TIME", "English")
# met <- read_csv("~/Pasteur/Networks/cleanweb/NODS-COV2_BASE_FINALE_20201020_TDT.csv")
met <- readxl::read_xlsx("~/nodscov2_networkAnalysis/input/cleanweb/NODS-COV2_BASE_FINALE_20201020_TDT.xlsx")
met
View(met)
met %>% names
met$M4F1_NOMHOP_F1 %>% table
met$M4F1_SPECIALITE_F1 %>% table
met$M4F1_AUTREPREC_F1 %>% table
met %>% select(starts_with("M4")) %>% unique
met %>% select(starts_with("M4")) %>% unique %>%
View
metcsv <- read_csv("~/Pasteur/Networks/cleanweb/NODS-COV2_BASE_FINALE_20201020_TDT.csv")
metcsv <- read_csv("~/nodscov2_networkAnalysis/input/cleanweb/NODS-COV2_BASE_FINALE_20201020_TDT.csv")
met %>% nrow
metcsv %>% nrow
metcsv %>% select(starts_with("M4")) %>% unique %>%
View
metcsv
metcsv <- read_delim("~/nodscov2_networkAnalysis/input/cleanweb/NODS-COV2_BASE_FINALE_20201020_TDT.csv", ";")
metcsv
metcsv %>% select(starts_with("M4")) %>% unique %>%
View
system("ls ~/Documents/nodscov2_networkAnalysis/FreqDens/Plans/plan/*")
system("ls ~/nodscov2_networkAnalysis/FreqDens/Plans/plan/*")
system("ls ~/nodscov2_networkAnalysis/FreqDens/Plans/plan/*")
system("ls C:/Users/gshirref/Documents/nodscov2_networkAnalysis/FreqDens/Plans/plan/*")
system("ls C://Users/gshirref/Documents/nodscov2_networkAnalysis/FreqDens/Plans/plan/*")
system("ls C://Users/gshirref/Documents/nodscov2_networkAnalysis/FreqDens/Plans/plan/*")
system("ls C::/Users/gshirref/Documents/nodscov2_networkAnalysis/FreqDens/Plans/plan/*")
system("ls C:/Users/gshirref/Documents/nodscov2_networkAnalysis/FreqDens/Plans/plan/*")
system("ls")
system("ls ../nodscov2_networkAnalysis/FreqDens/Plans/plan/*")
system("ls ../nodscov2_networkAnalysis/FreqDens/Plans/plan/")
system("ls ../nodscov2_networkAnalysis/FreqDens/Plans/plan/plansghcurgencesragriatrie/")
system("ls ../nodscov2_networkAnalysis/FreqDens/Plans/plan/")
system("ls ../nodscov2_networkAnalysis/FreqDens/Plans/plansghcurgencesragriatrie/")
ward_intervals_loglik %>%
filter(newID != "All wards") %>%
ggplot() +
geom_histogram(aes(x = contactIntensity)) +
facet_wrap(~newID)
library(tidyverse)
library(ggplot2)
# library(FME)
library(ggh4x)
library(modi)
library(scales)
source("2.1_load_analysis.R")
ward_expRates <- ward_intervals %>%
group_by(ward_id) %>%
summarize(expRate = 1 / mean(contactIntensity, na.rm = T))
# Plot the histograms with exponential lines
ward_intervals %>%
as_tibble %>%
left_join(ward_expRates) %>%
ggplot(aes(x = contactIntensity)) +
geom_histogram(aes(y = ..density..), bins = 30, fill = "lightblue", color = "black") +
facet_wrap(~ward_id) +
stat_function(
fun = function(x) dexp(x, rate = ward_expRates$expRate[ward_expRates$ward_id == unique(ward_rates$ward_id)]),
color = "red", size = 1
) +
theme_minimal() +
labs(title = "Histograms with Exponential Fit per Category")
ward_expRates
# Plot the histograms with exponential lines
ward_intervals %>%
as_tibble %>%
left_join(ward_expRates) %>%
ggplot(aes(x = contactIntensity)) +
geom_histogram(aes(y = ..density..), bins = 30, fill = "lightblue") +
facet_wrap(~ward_id) +
stat_function(
fun = function(x) dexp(x, rate = ward_expRates$expRate[ward_expRates$ward_id == unique(ward_rates$ward_id)]),
color = "red", size = 1
) +
theme_minimal() +
labs(title = "Histograms with Exponential Fit per Category")
# Plot the histograms with exponential lines
ward_intervals %>%
as_tibble %>%
left_join(ward_expRates) %>%
ggplot(aes(x = contactIntensity)) +
geom_histogram(aes(y = ..density..), bins = 30, fill = "lightblue") +
facet_wrap(~ward_id) +
stat_function(
fun = function(x) dexp(x, rate = 1/ward_expRates$expRate[ward_expRates$ward_id == unique(ward_rates$ward_id)]),
color = "red", size = 1
) +
theme_minimal() +
labs(title = "Histograms with Exponential Fit per Category")
# Plot the histograms with exponential lines
ward_intervals %>%
as_tibble %>%
left_join(ward_expRates) %>%
ggplot(aes(x = contactIntensity)) +
geom_histogram(aes(y = ..density..), bins = 30, fill = "lightblue") +
facet_wrap(~ward_id) +
stat_function(
fun = function(x) dexp(x, rate = ward_expRates$expRate[ward_expRates$ward_id == unique(ward_rates$ward_id)]),
color = "red", size = 10
) +
theme_minimal() +
labs(title = "Histograms with Exponential Fit per Category")
ward_intervals
# Plot the histograms with exponential lines
ward_intervals %>%
as_tibble %>%
# left_join(ward_expRates) %>%
ggplot(aes(x = contactIntensity)) +
geom_histogram(aes(y = ..density..), bins = 30, fill = "lightblue") +
facet_wrap(~ward_id) +
stat_function(
fun = function(x) dexp(x, rate = ward_expRates$expRate[ward_expRates$ward_id == unique(ward_rates$ward_id)]),
color = "red", size = 10
) +
theme_minimal() +
labs(title = "Histograms with Exponential Fit per Category")
# Plot the histograms with exponential lines
ward_intervals %>%
as_tibble %>%
# left_join(ward_expRates) %>%
ggplot(aes(x = contactIntensity)) +
geom_histogram(aes(y = ..density..), bins = 30, fill = "lightblue") +
facet_wrap(~ward_id) +
stat_function(
fun = function(x) dexp(x, rate = ward_expRates$expRate[ward_expRates$ward_id == unique(ward_rates$ward_id)]),
color = "red", size = 100
) +
theme_minimal() +
labs(title = "Histograms with Exponential Fit per Category")
ward_intervals
ward_expRates
stat_function(
fun = function(x) dexp(x, rate = ward_expRates$expRate[ward_expRates$ward_id == unique(ward_rates$ward_id)]),
color = "red", size = 100
)
ward_expRates$expRate[ward_expRates$ward_id == unique(ward_rates$ward_id)])
ward_expRates$expRate[ward_expRates$ward_id == unique(ward_rates$ward_id)]
unique(ward_intervals$ward_id)
ward_expRates$expRate[ward_expRates$ward_id == unique(ward_intervals$ward_id)])
ward_expRates$expRate[ward_expRates$ward_id == unique(ward_intervals$ward_id)]
# Plot the histograms with exponential lines
ward_intervals %>%
as_tibble %>%
# left_join(ward_expRates) %>%
ggplot(aes(x = contactIntensity)) +
geom_histogram(aes(y = ..density..), bins = 30, fill = "lightblue") +
facet_wrap(~ward_id) +
stat_function(
fun = function(x) dexp(x, rate = ward_expRates$expRate[ward_expRates$ward_id == unique(ward_intervals$ward_id)]),
color = "red", size = 100
) +
theme_minimal() +
labs(title = "Histograms with Exponential Fit per Category")
# Plot the histograms with exponential lines
ward_intervals %>%
as_tibble %>%
# left_join(ward_expRates) %>%
ggplot(aes(x = contactIntensity)) +
geom_histogram(aes(y = ..density..), bins = 30, fill = "lightblue") +
facet_wrap(~ward_id) +
stat_function(
fun = function(x) dexp(x, rate = ward_expRates$expRate[ward_expRates$ward_id == unique(ward_intervals$ward_id)]),
color = "red", size = 1
) +
theme_minimal() +
labs(title = "Histograms with Exponential Fit per Category")
# Plot the histograms with exponential lines
ward_intervals %>%
as_tibble %>%
left_join(ward_expRates) %>%
ggplot(aes(x = contactIntensity)) +
geom_histogram(aes(y = ..density..), bins = 30, fill = "lightblue") +
facet_wrap(~ward_id) +
stat_function(
fun = function(x) dexp(x, rate = ward_expRates$expRate[ward_expRates$ward_id == unique(ward_intervals$ward_id)]),
color = "red", size = 1
) +
theme_minimal() +
labs(title = "Histograms with Exponential Fit per Category")
ward_expRates$expRate[ward_expRates$ward_id == unique(ward_intervals$ward_id)]
ward_expRates
ward_expRates$expRate[ward_expRates$ward_id == unique(ward_intervals$ward_id)]
ward_expRates$expRate[ward_expRates$ward_id == unique(ward_intervals$ward_id)])
ward_expRates$expRate[ward_expRates$ward_id == unique(ward_intervals$ward_id)]
# Plot the histograms with exponential lines
ward_rates %>%
as_tibble %>%
left_join(ward_expRates) %>%
ggplot(aes(x = contactIntensity)) +
geom_histogram(aes(y = ..density..), bins = 30, fill = "lightblue") +
facet_wrap(~ward_id) +
stat_function(
fun = function(x) dexp(x, rate = ward_expRates$expRate[ward_expRates$ward_id == unique(ward_intervals$ward_id)]),
color = "red", size = 1
) +
theme_minimal() +
labs(title = "Histograms with Exponential Fit per Category")
ward_intervals %>%
as_tibble %>%
left_join(ward_expRates) %>%
ggplot(aes(x = contactIntensity)) +
geom_histogram(aes(y = ..density..), bins = 30, fill = "lightblue") +
facet_wrap(~ward_id)
ward_intervals$contactIntensity %>% max(na.rm = T)
tibble(contactIntensity = seq(0, ward_intervals$contactIntensity %>% max(na.rm = T), by = 0.01))
unique(ward_intervals$ward_id)
ward_intervals
typeID
ward_intervals %>%
left_join(typeID %>% select(ward_id, newID)) %>%
select(ward_id, newID, contactIntensity)
distributionIntensity <- ward_intervals %>%
left_join(typeID %>% select(ward_id, newID)) %>%
select(ward_id, newID, contactIntensity) %>%
filter(!is.na(contactIntensity), !is.na(newID))
distribution_contactIntensity <- ward_intervals %>%
left_join(typeID %>% select(ward_id, newID)) %>%
select(ward_id, newID, contactIntensity) %>%
filter(!is.na(contactIntensity), !is.na(newID))
distribution_contactIntensity <- ward_intervals %>%
left_join(typeID %>% select(ward_id, newID)) %>%
select(ward_id, newID, contactIntensity) %>%
filter(!is.na(contactIntensity), !is.na(newID))
distribution_contactIntensity
ward_expRates <- distribution_contactIntensity %>%
group_by(ward_id, newID) %>%
summarize(expRate = 1 / mean(contactIntensity, na.rm = T))
ward_expRates
distribution_contactIntensity$newID %>% unique
distribution_contactIntensity$newID %>% unique %>% sort
list(newID = distribution_contactIntensity$newID %>% unique %>% sort,
contactIntensity = seq(0, distribution_contactIntensity$contactIntensity %>% max, by = 0.01))
expand.grid(list(newID = distribution_contactIntensity$newID %>% unique %>% sort,
contactIntensity = seq(0, distribution_contactIntensity$contactIntensity %>% max, by = 0.01)))
expand.grid(list(newID = distribution_contactIntensity$newID %>% unique %>% sort,
contactIntensity = seq(0, distribution_contactIntensity$contactIntensity %>% max, by = 0.01))) %>%
as_tibble %>%
left_join(ward_expRates)
line_tib <- expand.grid(list(newID = distribution_contactIntensity$newID %>% unique %>% sort,
contactIntensity = seq(0, distribution_contactIntensity$contactIntensity %>% max, by = 0.01))) %>%
as_tibble %>%
left_join(ward_expRates)
line_tib
line_tib <- expand.grid(list(newID = distribution_contactIntensity$newID %>% unique %>% sort,
contactIntensity = seq(0, distribution_contactIntensity$contactIntensity %>% max, by = 0.01))) %>%
as_tibble %>%
left_join(ward_expRates) %>%
mutate(density = dexp(x = contactIntensity, rate = expRate))
line_tib
# Plot the histograms with exponential lines
distribution_contactIntensity %>%
ggplot(aes(x = contactIntensity)) +
geom_histogram(aes(y = ..density..), bins = 30, fill = "lightblue") +
geom_line(data = line_tib, aes(x = contactIntensity, y = density)) +
facet_wrap(~newID) +
theme_minimal() +
labs(title = "Histograms with Exponential Fit per Category")
# Plot the histograms with exponential lines
distribution_contactIntensity %>%
ggplot(aes(x = contactIntensity)) +
geom_histogram(aes(y = ..density..), bins = 30, fill = "lightblue") +
geom_line(data = line_tib, aes(x = contactIntensity, y = density)) +
facet_wrap(~newID) +
theme_bw() +
labs(title = "Histograms with Exponential Fit per Category")
# Plot the histograms with exponential lines
distribution_contactIntensity %>%
ggplot(aes(x = contactIntensity)) +
geom_histogram(aes(y = ..density..), bins = 30, fill = "lightblue") +
geom_line(data = line_tib, aes(x = contactIntensity, y = density, colour = "Exponential"), size = 1) +
facet_wrap(~newID) +
theme_bw() +
labs(xlab = "Contact rate", y = "Density")
# Plot the histograms with exponential lines
distribution_contactIntensity %>%
ggplot(aes(x = contactIntensity)) +
geom_histogram(aes(y = ..density..), bins = 30, fill = "lightblue") +
geom_line(data = line_tib, aes(x = contactIntensity, y = density, colour = "Exponential"), size = 0.2) +
facet_wrap(~newID) +
theme_bw() +
labs(xlab = "Contact rate", y = "Density")
# Plot the histograms with exponential lines
distribution_contactIntensity %>%
ggplot(aes(x = contactIntensity)) +
geom_histogram(aes(y = ..density..), bins = 30, fill = "lightblue") +
geom_line(data = line_tib, aes(x = contactIntensity, y = density, colour = "Exponential"), linetype = "dashed", size = 0.2) +
facet_wrap(~newID) +
scale_colour_manual(values = c(Exponential = "darkgrey")) +
theme_bw() +
labs(xlab = "Contact rate", y = "Density")
# Plot the histograms with exponential lines
distribution_contactIntensity %>%
ggplot(aes(x = contactIntensity)) +
geom_histogram(aes(y = ..density..), bins = 30, fill = "lightblue") +
geom_line(data = line_tib, aes(x = contactIntensity, y = density, colour = "Exponential"), linetype = "dashed", size = 0.5) +
facet_wrap(~newID) +
scale_colour_manual(values = c(Exponential = "black")) +
theme_bw() +
labs(xlab = "Contact rate", y = "Density")
# Plot the histograms with exponential lines
distribution_contactIntensity %>%
ggplot(aes(x = contactIntensity)) +
geom_histogram(aes(y = ..density..), bins = 30, fill = "lightblue") +
geom_line(data = line_tib, aes(x = contactIntensity, y = density, colour = "Exponential"), linetype = "dashed", size = 0.5) +
facet_wrap(~newID) +
scale_colour_manual(values = c(Exponential = "black")) +
theme_bw() +
labs(x = "Contact rate", y = "Density", colour = "")
# Plot the histograms with exponential lines
distribution_contactIntensity %>%
ggplot(aes(x = contactIntensity)) +
geom_histogram(aes(y = ..density..), bins = 30, fill = "lightblue") +
geom_line(data = line_tib, aes(x = contactIntensity, y = density, colour = "Exponential"), linetype = "dashed", size = 0.5) +
facet_wrap(~newID, nrow = 2) +
scale_colour_manual(values = c(Exponential = "black")) +
theme_bw() +
labs(x = "Contact rate", y = "Density", colour = "")
# Plot the histograms with exponential lines
distribution_contactIntensity %>%
ggplot(aes(x = contactIntensity)) +
geom_histogram(aes(y = ..density..), bins = 30, fill = "lightblue") +
geom_line(data = line_tib, aes(x = contactIntensity, y = density, colour = "Exponential"), linetype = "dashed", size = 0.5) +
facet_wrap(~newID, nrow = 2) +
scale_colour_manual(values = c(Exponential = "black")) +
theme_bw() +
labs(x = "Contact rate", y = "Density", colour = "") +
coord_cartesian(x = c(0, 2))
ggsave(filename = paste0("output/SuppFig1 - exponential rates.png")
, width = 35, height = 20, units = "cm", dpi = 1000)
# Plot the histograms with exponential lines
distribution_contactIntensity %>%
ggplot(aes(x = contactIntensity)) +
geom_histogram(aes(y = ..density..), bins = 30, fill = "lightblue") +
geom_line(data = line_tib, aes(x = contactIntensity, y = density, colour = "Exponential"), linetype = "dashed", size = 0.5) +
facet_wrap(~newID, nrow = 2) +
scale_colour_manual(values = c(Exponential = "black")) +
theme_bw() +
labs(x = "Contact rate", y = "Density", colour = "") +
coord_cartesian(x = c(0, 2), y = c(0, 6))
ggsave(filename = paste0("output/SuppFig1 - exponential rates.png")
, width = 35, height = 12, units = "cm", dpi = 1000)
# Plot the histograms with exponential lines
distribution_contactIntensity %>%
ggplot(aes(x = contactIntensity)) +
geom_histogram(aes(y = ..density..), bins = 30, fill = "lightblue") +
geom_line(data = line_tib, aes(x = contactIntensity, y = density, colour = "Exponential"), linetype = "dashed", size = 0.5) +
facet_wrap(~newID, nrow = 2) +
scale_colour_manual(values = c(Exponential = "black")) +
theme_bw() +
labs(x = "Contact rate", y = "Density", colour = "") +
coord_cartesian(x = c(0, 2), y = c(0, 4.5))
ggsave(filename = paste0("output/SuppFig1 - exponential rates.png")
, width = 35, height = 12, units = "cm", dpi = 1000)
# Plot the histograms with exponential lines
distribution_contactIntensity %>%
ggplot(aes(x = contactIntensity)) +
geom_histogram(aes(y = ..density..), bins = 30, fill = "lightblue") +
geom_line(data = line_tib, aes(x = contactIntensity, y = density, colour = "Exponential"), linetype = "dashed", size = 0.5) +
facet_wrap(~newID, nrow = 2) +
scale_colour_manual(values = c(Exponential = "black")) +
theme_bw() +
labs(x = "Contact rate", y = "Density", colour = "") +
coord_cartesian(x = c(0, 1.2), y = c(0, 4.5))
ggsave(filename = paste0("output/SuppFig1 - exponential rates.png")
, width = 35, height = 12, units = "cm", dpi = 1000)
# Plot the histograms with exponential lines
distribution_contactIntensity %>%
ggplot(aes(x = contactIntensity)) +
geom_histogram(aes(y = ..density..), bins = 30, fill = "lightblue") +
geom_line(data = line_tib, aes(x = contactIntensity, y = density, colour = "Exponential"), linetype = "dashed", size = 0.5) +
facet_wrap(~newID, nrow = 2) +
scale_colour_manual(values = c(Exponential = "black")) +
theme_bw() +
labs(x = "Contact rate", y = "Density", colour = "") +
coord_cartesian(x = c(0, 1.0), y = c(0, 4.5))
ggsave(filename = paste0("output/SuppFig1 - exponential rates.png")
, width = 35, height = 12, units = "cm", dpi = 1000)
# Plot the histograms with exponential lines
distribution_contactIntensity %>%
ggplot(aes(x = contactIntensity)) +
geom_histogram(aes(y = ..density..), bins = 30, fill = "lightblue") +
geom_line(data = line_tib, aes(x = contactIntensity, y = density, colour = "Exponential"), linetype = "dashed", size = 0.5) +
facet_wrap(~newID, nrow = 2) +
scale_colour_manual(values = c(Exponential = "black")) +
theme_bw() +
labs(x = "Contact rate", y = "Density", colour = "") +
coord_cartesian(x = c(0, 1.0), y = c(0, 4.5)) +
scale_x_continuous(breaks = c(0, 0.25, 0.5, 0.75, 1), labels = c(0, 0.25, 0.5, 0.75, ""))
ggsave(filename = paste0("output/SuppFig1 - exponential rates.png")
, width = 35, height = 12, units = "cm", dpi = 1000)
